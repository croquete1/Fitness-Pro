name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  guard:
    name: Protect critical paths
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes in critical files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            critical:
              - 'src/app/page.tsx'
              - 'src/app/login/**'
              - 'src/app/register/**'
              - 'src/app/(app)/dashboard/layout.tsx'
              - 'src/app/(app)/dashboard/page.tsx'
              - 'src/lib/authOptions.ts'
              - 'src/lib/auth.ts'
              - 'src/lib/prisma.ts'
              - 'src/middleware.ts'
              - 'src/app/api/auth/**'

      - name: Block PR if critical files changed without label
        if: steps.changes.outputs.critical == 'true' && !contains(toJson(github.event.pull_request.labels), 'allow-auth-changes')
        run: |
          echo "::error::Critical files changed. Add label 'allow-auth-changes' or get Code Owners approval."
          exit 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [guard]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: ESLint
        run: npx next lint

  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    needs: [guard]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: TS --noEmit
        run: npx tsc -p tsconfig.json --noEmit

  build:
    name: Next build
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    env:
      # Env "falsos" para permitir build sem segredos reais
      NEXTAUTH_SECRET: dummy-secret-for-ci
      DATABASE_URL: postgresql://user:pass@localhost:5432/db
      DIRECT_URL: postgresql://user:pass@localhost:5432/db
      NEXT_TELEMETRY_DISABLED: '1'
      CI: '1'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Build
        run: npx next build
